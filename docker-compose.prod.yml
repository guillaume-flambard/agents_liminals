version: '3.8'

services:
  # Application Next.js 15 - Agents Liminals
  agents-liminals:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agents-liminals-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://agents-liminals.memoapp.eu
      - NEXT_PUBLIC_N8N_URL=https://n8n.memoapp.eu
      - DATABASE_URL=postgresql://agents_user:${POSTGRES_PASSWORD}@postgres:5432/agents_liminals
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=https://agents-liminals.memoapp.eu
    depends_on:
      - postgres
      - redis
    networks:
      - traefik-public
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.agents-liminals.rule=Host(`agents-liminals.memoapp.eu`)"
      - "traefik.http.routers.agents-liminals.tls=true"
      - "traefik.http.routers.agents-liminals.tls.certresolver=le"
      - "traefik.http.services.agents-liminals.loadbalancer.server.port=3000"

  # PostgreSQL - Base de donn√©es principale
  postgres:
    image: postgres:15-alpine
    container_name: agents-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=agents_liminals
      - POSTGRES_USER=agents_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal
    ports:
      - "5432:5432"

  # Redis - Cache et sessions
  redis:
    image: redis:7-alpine
    container_name: agents-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - internal
    ports:
      - "6379:6379"

  # n8n - Workflows d'automatisation
  n8n:
    image: n8nio/n8n:latest
    container_name: agents-n8n
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - WEBHOOK_URL=https://n8n.memoapp.eu/
      - GENERIC_TIMEZONE=Europe/Paris
      - N8N_SECURE_COOKIE=false
      - N8N_HOST=n8n.memoapp.eu
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows-n8n:/home/node/workflows:ro
    depends_on:
      - postgres
    networks:
      - traefik-public
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.n8n.rule=Host(`n8n.memoapp.eu`)"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=le"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  # Traefik - Reverse Proxy
  traefik:
    image: traefik:v3.0
    container_name: agents-traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.memoapp.eu`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_AUTH}"

  # Portainer - Gestion des conteneurs
  portainer:
    image: portainer/portainer-ce:latest
    container_name: agents-portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.portainer.rule=Host(`portainer.memoapp.eu`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=le"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  traefik_letsencrypt:
  portainer_data:

networks:
  traefik-public:
    external: true
  internal:
    driver: bridge