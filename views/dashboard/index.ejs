<%- include('../layouts/main') %>

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="dashboard-container">
    <div class="dashboard-header">
        <h1 class="dashboard-title">üåü Observatoire des √âtats Int√©rieurs</h1>
        <p class="dashboard-subtitle">Bienvenue dans votre espace de consultation liminal</p>
    </div>

    <!-- Statistics Overview -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-number"><%= remaining %></div>
            <div class="stat-label">Consultations restantes</div>
            <div class="stat-sublabel">aujourd'hui</div>
        </div>
        <div class="stat-card">
            <div class="stat-number"><%= userDailyLimit %></div>
            <div class="stat-label">Limite quotidienne</div>
            <div class="stat-sublabel">selon votre abonnement</div>
        </div>
        <div class="stat-card">
            <div class="stat-number"><%= recentConsultations.length %></div>
            <div class="stat-label">Consultations r√©centes</div>
            <div class="stat-sublabel">cette semaine</div>
        </div>
        <div class="stat-card">
            <div class="stat-number"><%= (weeklyStats && weeklyStats.totalConsultations) || 0 %></div>
            <div class="stat-label">Total hebdomadaire</div>
            <div class="stat-sublabel">7 derniers jours</div>
        </div>
    </div>

    <!-- Agents Grid -->
    <div class="agents-grid">
        <% agents.forEach(agent => { %>
            <div class="agent-card">
                <div class="agent-icon">
                    <% if (agent.name === 'accordeur') { %>üéº
                    <% } else if (agent.name === 'peseur') { %>‚öñÔ∏è
                    <% } else if (agent.name === 'denoueur') { %>‚ö°
                    <% } else if (agent.name === 'evideur') { %>üï≥Ô∏è
                    <% } else if (agent.name === 'habitant') { %>‚óØ
                    <% } else { %>üåü<% } %>
                </div>
                <h3 class="agent-name"><%= agent.displayName %></h3>
                <p class="agent-description"><%= agent.description || 'Agent liminal sp√©cialis√©' %></p>
                <div class="agent-stats">
                    <div class="agent-stat">
                        <div class="agent-stat-number"><%= (agent.statistics && agent.statistics.totalConsultations) || 0 %></div>
                        <div class="agent-stat-label">Consultations</div>
                    </div>
                    <div class="agent-stat">
                        <div class="agent-stat-number"><%= (agent.statistics && agent.statistics.averageRating) || 'N/A' %></div>
                        <div class="agent-stat-label">Note</div>
                    </div>
                </div>
                <% if (remaining > 0 && agent.config && agent.config.isActive) { %>
                    <a href="/agents/<%= agent.name %>" class="consult-button">
                        Consulter
                    </a>
                <% } else { %>
                    <button class="consult-button" disabled>
                        <%= remaining === 0 ? 'Limite atteinte' : 'Indisponible' %>
                    </button>
                <% } %>
            </div>
        <% }) %>
    </div>

    <!-- Recent Consultations -->
    <div class="recent-consultations">
        <h2>Consultations r√©centes</h2>
        <% if (recentConsultations.length > 0) { %>
            <% recentConsultations.forEach(consultation => { %>
                <div class="consultation-item">
                    <div class="consultation-agent"><%= consultation.agentType %></div>
                    <div class="consultation-date">
                        <%= new Date(consultation.createdAt).toLocaleDateString('fr-FR', { 
                            weekday: 'long', 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric',
                            hour: '2-digit',
                            minute: '2-digit'
                        }) %>
                    </div>
                    <div class="consultation-preview">
                        <%= consultation.input && consultation.input.situation ? consultation.input.situation.substring(0, 120) + '...' : 'Consultation termin√©e' %>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <div class="empty-state">
                <div class="empty-state-icon">üåô</div>
                <p>Aucune consultation r√©cente</p>
                <p>Commencez votre premi√®re exploration des territoires liminals</p>
            </div>
        <% } %>
    </div>
</div>

<style>
    body {
        background: 
            radial-gradient(circle at 20% 80%, rgba(52, 152, 219, 0.1) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(155, 89, 182, 0.1) 0%, transparent 50%),
            radial-gradient(circle at 40% 40%, rgba(211, 84, 0, 0.05) 0%, transparent 50%),
            linear-gradient(135deg, #0c0c1e 0%, #1a1a2e 30%, #16213e 70%, #0f3460 100%);
        min-height: 100vh;
        margin: 0;
        padding: 0;
    }

    /* Texture papier ancien */
    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:
            repeating-linear-gradient(0deg,
                transparent,
                transparent 2px,
                rgba(236, 240, 241, 0.01) 2px,
                rgba(236, 240, 241, 0.01) 4px),
            repeating-linear-gradient(90deg,
                transparent,
                transparent 2px,
                rgba(236, 240, 241, 0.01) 2px,
                rgba(236, 240, 241, 0.01) 4px);
        pointer-events: none;
        z-index: 1;
    }

    .dashboard-container {
        min-height: 100vh;
        position: relative;
        z-index: 10;
        padding: 20px;
    }

    .dashboard-header {
        text-align: center;
        padding: 40px 20px;
        position: relative;
        z-index: 10;
    }

    .dashboard-title {
        font-size: 2.5rem;
        font-weight: 600;
        color: #3498db;
        margin-bottom: 10px;
        text-shadow: 0 0 20px rgba(52, 152, 219, 0.5);
    }

    .dashboard-subtitle {
        color: #95a5a6;
        font-size: 1.2rem;
        margin-bottom: 30px;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 40px;
        padding: 0 20px;
    }

    .stat-card {
        background: rgba(44, 62, 80, 0.8);
        border: 1px solid rgba(52, 152, 219, 0.3);
        border-radius: 12px;
        padding: 25px;
        text-align: center;
        backdrop-filter: blur(10px);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(52, 152, 219, 0.2);
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        color: #3498db;
        margin-bottom: 10px;
    }

    .stat-label {
        color: #ecf0f1;
        font-size: 1.1rem;
        margin-bottom: 5px;
    }

    .stat-sublabel {
        color: #95a5a6;
        font-size: 0.9rem;
    }

    .agents-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 25px;
        padding: 0 20px;
        margin-bottom: 40px;
    }

    .agent-card {
        background: rgba(44, 62, 80, 0.9);
        border: 1px solid rgba(52, 152, 219, 0.4);
        border-radius: 15px;
        padding: 30px;
        text-align: center;
        backdrop-filter: blur(15px);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .agent-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, transparent, #3498db, #9b59b6, transparent);
        opacity: 0.8;
    }

    .agent-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 15px 40px rgba(52, 152, 219, 0.3);
        border-color: rgba(52, 152, 219, 0.6);
    }

    .agent-icon {
        font-size: 3rem;
        margin-bottom: 15px;
        display: block;
    }

    .agent-name {
        font-size: 1.4rem;
        font-weight: 600;
        color: #3498db;
        margin-bottom: 10px;
    }

    .agent-description {
        color: #95a5a6;
        font-size: 0.95rem;
        margin-bottom: 20px;
        line-height: 1.5;
    }

    .agent-stats {
        display: flex;
        justify-content: space-around;
        margin-bottom: 20px;
        padding: 15px;
        background: rgba(0, 0, 0, 0.2);
        border-radius: 8px;
    }

    .agent-stat {
        text-align: center;
    }

    .agent-stat-number {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2ecc71;
    }

    .agent-stat-label {
        font-size: 0.8rem;
        color: #95a5a6;
    }

    .consult-button {
        background: linear-gradient(135deg, #3498db, #2980b9);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        width: 100%;
    }

    .consult-button:hover {
        background: linear-gradient(135deg, #2980b9, #3498db);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(52, 152, 219, 0.4);
        color: white;
    }

    .consult-button:disabled {
        background: #95a5a6;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }

    .recent-consultations {
        background: rgba(44, 62, 80, 0.8);
        border: 1px solid rgba(52, 152, 219, 0.3);
        border-radius: 15px;
        padding: 30px;
        margin: 0 20px 40px 20px;
        backdrop-filter: blur(10px);
    }

    .recent-consultations h2 {
        color: #3498db;
        font-size: 1.5rem;
        margin-bottom: 20px;
        text-align: center;
    }

    .consultation-item {
        background: rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 10px;
        border-left: 4px solid #3498db;
    }

    .consultation-agent {
        font-weight: 600;
        color: #3498db;
        margin-bottom: 5px;
    }

    .consultation-date {
        color: #95a5a6;
        font-size: 0.9rem;
        margin-bottom: 5px;
    }

    .consultation-preview {
        color: #ecf0f1;
        font-size: 0.95rem;
        line-height: 1.4;
    }

    .empty-state {
        text-align: center;
        padding: 40px;
        color: #95a5a6;
    }

    .empty-state-icon {
        font-size: 3rem;
        margin-bottom: 15px;
        opacity: 0.5;
    }

    .stars {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1;
    }

    .star {
        position: absolute;
        width: 2px;
        height: 2px;
        background: #ecf0f1;
        border-radius: 50%;
        opacity: 0.7;
        animation: twinkle 3s ease-in-out infinite;
    }

    @keyframes twinkle {
        0%, 100% {
            opacity: 0.3;
            transform: scale(1);
        }
        50% {
            opacity: 1;
            transform: scale(1.2);
        }
    }

    @media (max-width: 768px) {
        .dashboard-title {
            font-size: 2rem;
        }
        
        .stats-grid {
            grid-template-columns: 1fr;
        }
        
        .agents-grid {
            grid-template-columns: 1fr;
        }
        
        .agent-stats {
            flex-direction: column;
            gap: 10px;
        }
        
        .dashboard-container {
            padding: 10px;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add stars animation
        function createStars() {
            const starsContainer = document.createElement('div');
            starsContainer.className = 'stars';
            document.body.appendChild(starsContainer);

            for (let i = 0; i < 100; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.animationDelay = Math.random() * 3 + 's';
                starsContainer.appendChild(star);
            }
        }

        createStars();

        // Update stats periodically
        setInterval(function() {
            fetch('/dashboard/stats')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('Dashboard stats updated:', data.data);
                    }
                })
                .catch(error => console.error('Error updating stats:', error));
        }, 30000); // Update every 30 seconds
    });
</script>