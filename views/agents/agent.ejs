<%- include('../layouts/main') %>

<div class="container-fluid">
  <div class="row">
    <div class="col-12">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/dashboard">Observatoire</a></li>
          <li class="breadcrumb-item"><a href="/agents">Agents</a></li>
          <li class="breadcrumb-item active"><%= agent.displayName %></li>
        </ol>
      </nav>
    </div>
  </div>

  <div class="row">
    <!-- Agent Information -->
    <div class="col-md-4">
      <div class="agent-profile">
        <div class="agent-avatar">
          <% if (agent.name === 'accordeur') { %>üéº
          <% } else if (agent.name === 'peseur') { %>‚öñÔ∏è
          <% } else if (agent.name === 'denoueur') { %>‚ö°
          <% } else if (agent.name === 'evideur') { %>üï≥Ô∏è
          <% } else if (agent.name === 'habitant') { %>‚óØ
          <% } else { %>üåü<% } %>
        </div>
        
        <h1 class="agent-name"><%= agent.displayName %></h1>
        <p class="agent-territory"><%= agent.territory %></p>
        
        <div class="agent-status">
          <span class="status-badge <%= agent.isAvailable() ? 'status-available' : 'status-unavailable' %>">
            <%= agent.isAvailable() ? 'Disponible' : 'Indisponible' %>
          </span>
        </div>

        <div class="agent-description">
          <p><%= agent.description %></p>
        </div>

        <div class="agent-stats">
          <div class="stat-item">
            <div class="stat-value"><%= (agent.statistics && agent.statistics.totalConsultations) || 0 %></div>
            <div class="stat-label">Consultations</div>
          </div>
          <div class="stat-item">
            <div class="stat-value">
              <% if (agent.statistics && agent.statistics.averageRating) { %>
                <%= agent.statistics.averageRating.toFixed(1) %>/5
              <% } else { %>
                N/A
              <% } %>
            </div>
            <div class="stat-label">Note moyenne</div>
          </div>
        </div>

        <div class="consultation-limits">
          <h4>Limites de consultation</h4>
          <div class="limit-info">
            <% if (canConsult.canConsult) { %>
              <p class="limit-success">
                <i class="fas fa-check-circle"></i>
                Vous pouvez consulter cet agent
              </p>
              <div class="remaining-info">
                <p>Consultations restantes aujourd'hui :</p>
                <ul>
                  <li>Avec cet agent: <%= canConsult.remaining.agent %>/3</li>
                  <li>Total: <%= canConsult.remaining.total %>/<%= userDailyLimit %></li>
                </ul>
              </div>
            <% } else { %>
              <p class="limit-error">
                <i class="fas fa-exclamation-triangle"></i>
                <%= canConsult.message %>
              </p>
            <% } %>
          </div>
        </div>
      </div>
    </div>

    <!-- Consultation Interface -->
    <div class="col-md-8">
      <div class="consultation-interface">
        <div class="interface-header">
          <h2>Consultation avec <%= agent.displayName %></h2>
          <p class="interface-subtitle">D√©crivez votre situation int√©rieure et recevez les conseils de l'agent</p>
        </div>

        <% if (canConsult.canConsult && agent.isAvailable()) { %>
          <form id="consultationForm" class="consultation-form">
            <div class="form-group">
              <label for="situation">D√©crivez votre situation int√©rieure *</label>
              <textarea 
                id="situation" 
                name="situation" 
                class="form-control" 
                rows="6" 
                placeholder="Exprimez ce qui vous pr√©occupe, vos ressentis, vos questionnements..."
                required
              ></textarea>
              <small class="form-text">Soyez authentique et pr√©cis dans votre description</small>
            </div>

            <div class="form-group">
              <label for="rituel">Rituel accompli (optionnel)</label>
              <input 
                type="text" 
                id="rituel" 
                name="rituel" 
                class="form-control" 
                placeholder="Ex: Bougie allum√©e, respiration profonde, m√©ditation..."
              />
              <small class="form-text">D√©crivez bri√®vement un rituel que vous avez accompli</small>
            </div>

            <div class="form-actions">
              <button type="submit" class="btn btn-primary btn-lg">
                <i class="fas fa-comments"></i>
                Consulter l'agent
              </button>
              <a href="/agents" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i>
                Retour aux agents
              </a>
            </div>
          </form>

          <div id="consultationResult" class="consultation-result" style="display: none;">
            <div class="result-header">
              <h3>R√©ponse de <%= agent.displayName %></h3>
            </div>
            <div id="resultContent" class="result-content"></div>
            <div class="result-actions">
              <button type="button" class="btn btn-primary" onclick="newConsultation()">
                <i class="fas fa-plus"></i>
                Nouvelle consultation
              </button>
              <a href="/consultations" class="btn btn-outline-primary">
                <i class="fas fa-history"></i>
                Voir l'historique
              </a>
            </div>
          </div>

        <% } else { %>
          <div class="consultation-unavailable">
            <div class="unavailable-icon">
              <i class="fas fa-ban"></i>
            </div>
            <h3>Consultation indisponible</h3>
            <% if (!agent.isAvailable()) { %>
              <p>Cet agent n'est pas disponible pour le moment.</p>
            <% } else { %>
              <p><%= canConsult.message %></p>
            <% } %>
            <div class="unavailable-actions">
              <a href="/agents" class="btn btn-primary">
                <i class="fas fa-search"></i>
                Voir les autres agents
              </a>
              <a href="/dashboard" class="btn btn-secondary">
                <i class="fas fa-home"></i>
                Retour au tableau de bord
              </a>
            </div>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<style>
  .breadcrumb {
    background: none;
    padding: 1rem 0;
    margin-bottom: 2rem;
  }

  .breadcrumb-item + .breadcrumb-item::before {
    content: ">";
    color: #6c757d;
  }

  .breadcrumb-item a {
    color: #3498db;
    text-decoration: none;
  }

  .agent-profile {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    text-align: center;
    position: sticky;
    top: 2rem;
  }

  .agent-avatar {
    width: 120px;
    height: 120px;
    margin: 0 auto 1.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 4rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border: 4px solid #fff;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .agent-name {
    font-size: 2rem;
    color: #2c3e50;
    margin-bottom: 0.5rem;
  }

  .agent-territory {
    color: #6c757d;
    font-size: 1.1rem;
    font-style: italic;
    margin-bottom: 1.5rem;
  }

  .agent-status {
    margin-bottom: 2rem;
  }

  .status-badge {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    font-size: 0.9rem;
    font-weight: 500;
  }

  .status-available {
    background: #d4edda;
    color: #155724;
  }

  .status-unavailable {
    background: #f8d7da;
    color: #721c24;
  }

  .agent-description {
    margin-bottom: 2rem;
    line-height: 1.6;
    color: #495057;
    text-align: left;
  }

  .agent-stats {
    display: flex;
    justify-content: space-around;
    margin-bottom: 2rem;
    padding: 1.5rem;
    background: #f8f9fa;
    border-radius: 12px;
  }

  .stat-item {
    text-align: center;
  }

  .stat-value {
    font-size: 1.5rem;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 0.25rem;
  }

  .stat-label {
    font-size: 0.8rem;
    color: #6c757d;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .consultation-limits {
    border-top: 1px solid #e9ecef;
    padding-top: 1.5rem;
    text-align: left;
  }

  .consultation-limits h4 {
    color: #2c3e50;
    margin-bottom: 1rem;
  }

  .limit-success {
    color: #155724;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .limit-error {
    color: #721c24;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .remaining-info {
    background: #d1ecf1;
    padding: 1rem;
    border-radius: 8px;
    font-size: 0.9rem;
  }

  .remaining-info ul {
    margin: 0.5rem 0 0 1rem;
  }

  .consultation-interface {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .interface-header {
    margin-bottom: 2rem;
    text-align: center;
  }

  .interface-header h2 {
    color: #2c3e50;
    font-size: 2rem;
    margin-bottom: 0.5rem;
  }

  .interface-subtitle {
    color: #6c757d;
    font-size: 1.1rem;
  }

  .consultation-form {
    margin-bottom: 2rem;
  }

  .form-group {
    margin-bottom: 2rem;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #2c3e50;
  }

  .form-control {
    width: 100%;
    padding: 1rem;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1rem;
    font-family: inherit;
    transition: border-color 0.3s ease;
  }

  .form-control:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }

  .form-text {
    font-size: 0.8rem;
    color: #6c757d;
    margin-top: 0.5rem;
  }

  .form-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .btn {
    padding: 0.75rem 2rem;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .btn-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
  }

  .btn-secondary {
    background: #6c757d;
    color: white;
  }

  .btn-secondary:hover {
    background: #5a6268;
  }

  .btn-outline-primary {
    background: transparent;
    border: 2px solid #667eea;
    color: #667eea;
  }

  .btn-outline-primary:hover {
    background: #667eea;
    color: white;
  }

  .btn-lg {
    padding: 1rem 2.5rem;
    font-size: 1.1rem;
  }

  .consultation-result {
    margin-top: 2rem;
    padding: 2rem;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-radius: 12px;
    border: 1px solid #dee2e6;
  }

  .result-header {
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .result-header h3 {
    color: #2c3e50;
    font-size: 1.5rem;
  }

  .result-content {
    margin-bottom: 2rem;
    line-height: 1.7;
    font-size: 1.1rem;
    color: #495057;
  }

  .result-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .consultation-unavailable {
    text-align: center;
    padding: 4rem 2rem;
    color: #6c757d;
  }

  .unavailable-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    color: #dc3545;
  }

  .unavailable-actions {
    margin-top: 2rem;
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .loading-state {
    text-align: center;
    padding: 3rem;
    color: #6c757d;
  }

  .loading-spinner {
    width: 3rem;
    height: 3rem;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #667eea;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 1rem;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @media (max-width: 768px) {
    .agent-profile {
      position: static;
      margin-bottom: 2rem;
    }
    
    .agent-stats {
      flex-direction: column;
      gap: 1rem;
    }
    
    .form-actions, .result-actions, .unavailable-actions {
      flex-direction: column;
    }
  }
</style>

<script>
  const agentName = '<%= agent.name %>';
  const agentDisplayName = '<%= agent.displayName %>';

  document.getElementById('consultationForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const situation = document.getElementById('situation').value.trim();
    const rituel = document.getElementById('rituel').value.trim();
    
    if (!situation) {
      alert('Veuillez d√©crire votre situation');
      return;
    }
    
    // Show loading state
    showLoadingState();
    
    try {
      // Prepare consultation data
      const consultationData = {
        agentType: agentName,
        situation: situation,
        rituel: rituel || undefined
      };
      
      // Call API endpoint
      const response = await fetch('/api/consultations', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(consultationData)
      });
      
      const result = await response.json();
      
      if (!response.ok) {
        throw new Error(result.message || result.error || `Erreur ${response.status}`);
      }
      
      // Display result
      displayResult(result.data.response);
      
    } catch (error) {
      console.error('Consultation error:', error);
      showError(error.message);
    }
  });
  
  function showLoadingState() {
    const form = document.getElementById('consultationForm');
    const resultDiv = document.getElementById('consultationResult');
    
    form.style.display = 'none';
    resultDiv.style.display = 'block';
    resultDiv.innerHTML = `
      <div class="loading-state">
        <div class="loading-spinner"></div>
        <h3>Consultation en cours...</h3>
        <p>${agentDisplayName} analyse votre situation et pr√©pare sa r√©ponse...</p>
      </div>
    `;
  }
  
  function displayResult(result) {
    const resultDiv = document.getElementById('consultationResult');
    const contentDiv = document.getElementById('resultContent');
    
    let content = '';
    
    if (result.consultation) {
      content = `<div class="consultation-text">${result.consultation.replace(/\n/g, '<br>')}</div>`;
      
      if (result.signature) {
        content += `<div class="signature" style="margin-top: 1.5rem; padding-top: 1rem; border-top: 1px solid #dee2e6; text-align: right; font-style: italic; color: #6c757d;">${result.signature}</div>`;
      }
      
      if (result.effet) {
        content += `<div class="effet" style="margin-top: 1rem; padding: 1rem; background: #d1ecf1; border-radius: 8px; border: 1px solid #bee5eb;"><strong>Effet observ√©:</strong> ${result.effet}</div>`;
      }
    } else {
      content = `<div class="raw-result"><pre>${JSON.stringify(result, null, 2)}</pre></div>`;
    }
    
    contentDiv.innerHTML = content;
    
    // Update result div with proper structure
    resultDiv.innerHTML = `
      <div class="result-header">
        <h3>R√©ponse de ${agentDisplayName}</h3>
      </div>
      <div class="result-content">${content}</div>
      <div class="result-actions">
        <button type="button" class="btn btn-primary" onclick="newConsultation()">
          <i class="fas fa-plus"></i>
          Nouvelle consultation
        </button>
        <a href="/consultations" class="btn btn-outline-primary">
          <i class="fas fa-history"></i>
          Voir l'historique
        </a>
      </div>
    `;
  }
  
  function showError(message) {
    const resultDiv = document.getElementById('consultationResult');
    
    resultDiv.innerHTML = `
      <div class="error-state" style="text-align: center; padding: 3rem; color: #dc3545;">
        <div class="error-icon" style="font-size: 3rem; margin-bottom: 1rem;">
          <i class="fas fa-exclamation-triangle"></i>
        </div>
        <h3>Erreur de consultation</h3>
        <p>${message}</p>
        <div style="margin-top: 2rem;">
          <button type="button" class="btn btn-primary" onclick="newConsultation()">
            <i class="fas fa-redo"></i>
            R√©essayer
          </button>
        </div>
      </div>
    `;
  }
  
  function newConsultation() {
    document.getElementById('consultationForm').style.display = 'block';
    document.getElementById('consultationResult').style.display = 'none';
    document.getElementById('consultationForm').reset();
    document.getElementById('situation').focus();
  }
</script>