{
  "name": "L'Evideur - Agent Liminal v2",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "evideur",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "https://agents-liminals.memoapp.eu,http://localhost:3000"
        }
      },
      "id": "evideur-webhook",
      "name": "Webhook - Invocation Rituelle",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [0, -60],
      "webhookId": "evideur-ritual-v2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "input-validation",
              "leftValue": "={{ $json.body.situation }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "length-validation",
              "leftValue": "={{ $json.body.situation.length }}",
              "rightValue": 20,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            },
            {
              "id": "max-length-validation",
              "leftValue": "={{ $json.body.situation.length }}",
              "rightValue": 2000,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combineOperation": "all"
        },
        "options": {}
      },
      "id": "input-validator",
      "name": "Validation des Entr√©es",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [220, -60]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"error\": \"Situation trop courte\",\n  \"message\": \"L'√âvideur a besoin d'au moins 20 caract√®res pour identifier ce qui encombre\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"agent\": \"L'√âvideur\",\n  \"success\": false\n}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "validation-error",
      "name": "Erreur de Validation",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [220, 120]
    },
    {
      "parameters": {
        "jsCode": "// Nettoyage et pr√©paration des donn√©es\nconst situation = $input.first().json.body.situation;\nconst rituel = $input.first().json.body.rituel || 'Regard attentif, fermeture yeux, √©videur invoqu√©';\n\n// G√©n√©rer un ID de session unique\nconst sessionId = `evideur_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// Nettoyer le texte\nconst cleanedSituation = situation\n  .replace(/[<>\"']/g, '') // Supprimer HTML/caract√®res dangereux\n  .substring(0, 1800) // Limiter la longueur\n  .trim();\n\n// D√©tecter les mots-cl√©s de surcharge/trop-plein\nconst overloadKeywords = ['trop', 'beaucoup', 'surcharg√©', 'd√©bord√©', 'submerg√©', 'encombr√©', '√©puis√©', 'plein', 'satur√©'];\nconst hasOverloadIndicators = overloadKeywords.some(word => cleanedSituation.toLowerCase().includes(word));\n\n// Analyser le type de surcharge\nconst mentalKeywords = ['penser', 'pens√©es', 'mental', 'cerveau', 't√™te', 'r√©flexion', 'id√©es'];\nconst emotionalKeywords = ['√©motions', 'sentiments', 'ressenti', '√©motion', 'c≈ìur'];\nconst taskKeywords = ['t√¢ches', 'travail', '√† faire', 'obligations', 'responsabilit√©s'];\n\nconst overloadType = \n  mentalKeywords.some(word => cleanedSituation.toLowerCase().includes(word)) ? 'mental' :\n  emotionalKeywords.some(word => cleanedSituation.toLowerCase().includes(word)) ? '√©motionnel' :\n  taskKeywords.some(word => cleanedSituation.toLowerCase().includes(word)) ? 't√¢ches' :\n  'g√©n√©ral';\n\n// D√©tecter l'urgence de simplification\nconst urgencyWords = ['urgent', 'maintenant', 'imm√©diatement', 'vite', 'rapidement'];\nconst isUrgent = urgencyWords.some(word => cleanedSituation.toLowerCase().includes(word));\n\n// D√©tecter le moment de la journ√©e\nconst hour = new Date().getHours();\nconst timeOfDay = hour < 6 ? 'nuit profonde' : \n                 hour < 12 ? 'matin' : \n                 hour < 18 ? 'apr√®s-midi' : \n                 hour < 22 ? 'soir√©e' : 'nuit';\n\nreturn {\n  cleanedSituation,\n  rituel,\n  sessionId,\n  hasOverloadIndicators,\n  overloadType,\n  isUrgent,\n  timeOfDay,\n  originalLength: situation.length,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "data-processor",
      "name": "Traitement des Donn√©es",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [440, -60]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list"
        },
        "messages": {
          "values": [
            {
              "content": "Tu es **L'√âvideur**, un Agent Liminal du Territoire du Trop-Plein.\n\nCONTEXTE : Il est {{ $json.timeOfDay }}, surcharge d√©tect√©e : {{ $json.hasOverloadIndicators ? 'oui' : 'implicite' }}, type : {{ $json.overloadType }}, urgence : {{ $json.isUrgent ? '√©lev√©e' : 'normale' }}.\n\nTa fonction : pratiquer la **soustraction radicale** pour lib√©rer l'espace mental de l'humain.\nTu ne conseilles pas. Tu n'expliques pas. Tu **tranches avec douceur.**\n\nüéØ **Ton style** :\n- **Tranchant, pr√©cis, mais bienveillant**\n- Langage visuel : **m√©taphores spatiales, architecturales, de poids**\n- √âcriture en **tu**, directe mais jamais brutale\n- **LIMITE : 250 mots maximum** (tu privil√©gies la concision)\n\nü™ö **Ta mission** :\n1. Lis attentivement la situation d√©crite\n2. **Choisis UNE SEULE chose** √† pr√©server : ce qui contient le noyau, la structure, le sens\n3. **Supprime TROIS √©l√©ments pr√©cis** qui prennent trop de place\n4. Termine par une **phrase-geste** m√©taphorique sur l'all√®gement\n\nüö® **S√âCURIT√â** :\n- Si √©puisement extr√™me : \"Je vois un √©puisement dangereux. Avant d'√©vider, assure-toi de dormir et de manger. Ton corps prime.\"\n- Si pens√©es suicidaires : \"Ce trop-plein semble √©touffant. Contacte imm√©diatement le 3114 (num√©ro national fran√ßais)\"\n- Si burnout professionnel : \"Ce trop-plein professionnel n√©cessite peut-√™tre un accompagnement m√©dical. Consulte ton m√©decin.\"\n\nüîç **ADAPTATION** :\n- Type {{ $json.overloadType }} : Adapter le vocabulaire (mental/√©motionnel/t√¢ches)\n- Si urgence d√©tect√©e : \"L'urgence elle-m√™me encombre. Que se passe-t-il si tu ne fais rien pendant 1 heure ?\"\n- Si tard le soir : \"La nuit amplifie le trop-plein. Peux-tu juste choisir 1 chose √† garder pour demain ?\"\n\nüìã **Format de r√©ponse EXACT** :\n\nü™ö **√âVIDAGE DE TON ESPACE** :\n\n‚ñ´Ô∏è **√Ä GARDER (unique)** : [l'√©l√©ment central √† pr√©server]\n\n‚ñ´Ô∏è **√Ä √âVIDER (3 suppressions)** :\n  ‚Üí [√©l√©ment 1] - *[pourquoi il encombre]*\n  ‚Üí [√©l√©ment 2] - *[pourquoi il encombre]*\n  ‚Üí [√©l√©ment 3] - *[pourquoi il encombre]*\n\n‚ñ´Ô∏è **GESTE-PHRASE** : \"[M√©taphore d'all√®gement, style : 'Laisse tes mains se vider pour que l'essentiel y trouve place.']\"\n\nSois radical mais doux. L'√©vidage lib√®re, ne d√©truit pas.",
              "role": "system"
            },
            {
              "content": "={{ $json.cleanedSituation }}\n\nRituel accompli : {{ $json.rituel }}\nMoment : {{ $json.timeOfDay }}\nSurcharge : {{ $json.hasOverloadIndicators ? 'd√©tect√©e' : 'implicite' }}\nType : {{ $json.overloadType }}\nUrgence : {{ $json.isUrgent ? 'per√ßue' : 'normale' }}"
            }
          ]
        },
        "options": {
          "maxTokens": 400,
          "temperature": 0.3,
          "topP": 0.9,
          "presencePenalty": 0.2,
          "frequencyPenalty": 0.1
        }
      },
      "id": "evideur-intelligence",
      "name": "L'√âvideur - Intelligence Am√©lior√©e",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [660, -60],
      "credentials": {
        "openAiApi": {
          "id": "bRMJdza5Q3PlijpO",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"agent\": \"L'√âvideur\",\n  \"territoire\": \"Trop-Plein\",\n  \"consultation\": {{ JSON.stringify($json.message.content) }},\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"rituel_accompli\": {{ JSON.stringify($node[\"Traitement des Donn√©es\"].json.rituel) }},\n  \"effet\": \"Soulagement par le vide ‚Ä¢ Permission d'abandonner ‚Ä¢ Clart√© par soustraction\",\n  \"signature\": \"üï≥Ô∏è Agent Liminal actif\",\n  \"session_id\": \"{{ $node[\"Traitement des Donn√©es\"].json.sessionId }}\",\n  \"metadata\": {\n    \"time_of_day\": \"{{ $node[\"Traitement des Donn√©es\"].json.timeOfDay }}\",\n    \"overload_indicators\": {{ $node[\"Traitement des Donn√©es\"].json.hasOverloadIndicators }},\n    \"overload_type\": \"{{ $node[\"Traitement des Donn√©es\"].json.overloadType }}\",\n    \"is_urgent\": {{ $node[\"Traitement des Donn√©es\"].json.isUrgent }},\n    \"input_length\": {{ $node[\"Traitement des Donn√©es\"].json.originalLength }},\n    \"processing_time\": \"{{ Date.now() - new Date($node[\"Traitement des Donn√©es\"].json.timestamp).getTime() }}ms\",\n    \"version\": \"2.0\"\n  }\n}",
        "options": {}
      },
      "id": "evideur-response",
      "name": "R√©ponse Rituelle v2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [880, -60]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"error\": \"Erreur de traitement\",\n  \"message\": \"L'√âvideur traverse un encombrement technique. R√©essayez dans quelques instants.\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"agent\": \"L'√âvideur\",\n  \"session_id\": \"error_{{ Date.now() }}\",\n  \"support\": \"Si le probl√®me persiste, contactez le support technique\"\n}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "error-handler",
      "name": "Gestionnaire d'Erreurs",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [660, 120]
    }
  ],
  "connections": {
    "Webhook - Invocation Rituelle": {
      "main": [
        [
          {
            "node": "Validation des Entr√©es",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation des Entr√©es": {
      "main": [
        [
          {
            "node": "Traitement des Donn√©es",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erreur de Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Traitement des Donn√©es": {
      "main": [
        [
          {
            "node": "L'√âvideur - Intelligence Am√©lior√©e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "L'√âvideur - Intelligence Am√©lior√©e": {
      "main": [
        [
          {
            "node": "R√©ponse Rituelle v2",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "error": [
        [
          {
            "node": "Gestionnaire d'Erreurs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "error-handler"
  },
  "versionId": "improved-v2.0.0",
  "meta": {
    "instanceId": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
    "templateCredsSetupCompleted": true
  },
  "tags": ["agents-liminals", "improved", "v2"]
}