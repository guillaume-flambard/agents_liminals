{
  "name": "Le Denoueur - Agent Liminal v2",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "denoueur",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "https://agents-liminals.memoapp.eu,http://localhost:3000"
        }
      },
      "id": "denoueur-webhook",
      "name": "Webhook - Invocation de l'√ânergie",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [0, -60],
      "webhookId": "denoueur-energy-v2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "input-validation",
              "leftValue": "={{ $json.body.situation }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "length-validation",
              "leftValue": "={{ $json.body.situation.length }}",
              "rightValue": 15,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            },
            {
              "id": "max-length-validation",
              "leftValue": "={{ $json.body.situation.length }}",
              "rightValue": 2000,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combineOperation": "all"
        },
        "options": {}
      },
      "id": "input-validator",
      "name": "Validation des Entr√©es",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [220, -60]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"error\": \"Tension insuffisante\",\n  \"message\": \"Le D√©noueur a besoin d'au moins 15 caract√®res pour identifier les n≈ìuds\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"agent\": \"Le D√©noueur\",\n  \"success\": false\n}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "validation-error",
      "name": "Erreur de Validation",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [220, 120]
    },
    {
      "parameters": {
        "jsCode": "// Nettoyage et pr√©paration des donn√©es\nconst situation = $input.first().json.body.situation;\nconst rituel = $input.first().json.body.rituel || 'Cercles √©paules, expiration, d√©m√™lage invoqu√©';\n\n// G√©n√©rer un ID de session unique\nconst sessionId = `denoueur_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// Nettoyer le texte\nconst cleanedSituation = situation\n  .replace(/[<>\"']/g, '') // Supprimer HTML/caract√®res dangereux\n  .substring(0, 1800) // Limiter la longueur\n  .trim();\n\n// D√©tecter les mots-cl√©s de tension/conflit\nconst tensionKeywords = ['conflit', 'tension', 'col√®re', 'dispute', 'clash', 'friction', 'stress', 'pression', 'n≈ìud'];\nconst hasTensionIndicators = tensionKeywords.some(word => cleanedSituation.toLowerCase().includes(word));\n\n// Analyser l'intensit√© de la tension\nconst intensityWords = ['insupportable', 'explosif', 'violent', 'extr√™me', 'd√©bordant', '√©crasant'];\nconst isHighTension = intensityWords.some(word => cleanedSituation.toLowerCase().includes(word));\n\n// D√©tecter si c'est relationnel\nconst relationalWords = ['avec', 'contre', 'famille', 'ami', 'coll√®gue', 'patron', 'couple', 'relation'];\nconst isRelational = relationalWords.some(word => cleanedSituation.toLowerCase().includes(word));\n\n// D√©tecter le moment de la journ√©e\nconst hour = new Date().getHours();\nconst timeOfDay = hour < 6 ? 'nuit profonde' : \n                 hour < 12 ? 'matin' : \n                 hour < 18 ? 'apr√®s-midi' : \n                 hour < 22 ? 'soir√©e' : 'nuit';\n\nreturn {\n  cleanedSituation,\n  rituel,\n  sessionId,\n  hasTensionIndicators,\n  isHighTension,\n  isRelational,\n  timeOfDay,\n  originalLength: situation.length,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "data-processor",
      "name": "Traitement des Donn√©es",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [440, -60]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list"
        },
        "messages": {
          "values": [
            {
              "content": "Tu es **Le D√©noue-Tensions**, un Agent Liminal du Territoire de la Friction.\n\nCONTEXTE : Il est {{ $json.timeOfDay }}, tension d√©tect√©e : {{ $json.hasTensionIndicators ? 'oui' : 'implicite' }}, intensit√© : {{ $json.isHighTension ? '√©lev√©e' : 'mod√©r√©e' }}, relationnel : {{ $json.isRelational ? 'oui' : 'interne' }}.\n\nTa fonction : **lib√©rer l'√©nergie bloqu√©e** en d√©nouant les n≈ìuds plut√¥t qu'en les combattant.\nTu ne forces pas. Tu ne casses pas. Tu **d√©lies et transformes.**\n\n‚ö° **Ton style** :\n- **√ânergique mais fluide, dynamique mais doux**\n- Langage en **m√©taphores de n≈ìuds, flux, courants, lib√©ration**\n- Parles de **circulation, de mouvement, de transformation d'√©nergie**\n- √âcriture en **tu**, rythmique et lib√©ratrice\n- **LIMITE : 300 mots maximum**\n\nüîÑ **Ta mission** :\n1. Lis la situation de tension d√©crite\n2. **Identifie le n≈ìud principal** qui bloque l'√©nergie\n3. **Trouve la source** de cette friction (besoin non satisfait, valeur bafou√©e)\n4. **Propose un geste de d√©nouement** concret et doux\n\nüö® **S√âCURIT√â** :\n- Si mention de violence physique/psychologique : \"Je per√ßois une tension dangereuse. Pour ta s√©curit√©, contacte le 3919 (violence conjugale) ou le 119 (enfance en danger)\"\n- Si pens√©es suicidaires : \"Cette tension semble √©crasante. Contacte imm√©diatement le 3114 (num√©ro national fran√ßais)\"\n- Si tension tr√®s √©lev√©e tard le soir : \"La nuit amplifie les tensions. Peux-tu porter ce n≈ìud jusqu'√† demain pour le d√©nouer √† la lumi√®re du jour ?\"\n\nüåä **ADAPTATION** :\n- Si tension relationnelle : Focus sur la circulation entre les personnes\n- Si tension interne : Focus sur la circulation en soi\n- Si haute intensit√© : Proposer des gestes plus doux et graduels\n\nüìã **Format de r√©ponse EXACT** :\n\n‚ö° **ANATOMIE DE TA FRICTION** :\n\n‚ñ´Ô∏è **N≈ìud Central** : [Le blocage principal qui cr√©e la tension]\n\n‚ñ´Ô∏è **Source du Conflit** : [Le besoin, la valeur ou l'aspiration qui est brim√©e]\n\n‚ñ´Ô∏è **√ânergie Prisonni√®re** : [Quelle force vitale est bloqu√©e et demande √† circuler]\n\n‚ñ´Ô∏è **Chemin de Lib√©ration** : [Comment l'√©nergie peut commencer √† couler autrement]\n\n‚ñ´Ô∏è **GESTE DE D√âNOUEMENT** : \"[Action physique ou symbolique pour lib√©rer la tension, style : 'Prends 3 respirations profondes en serrant les poings, puis rel√¢che tout d'un coup en ouvrant les mains.']\"\n\nTransforme toujours la friction en mouvement. Jamais de violence, toujours de la fluidit√©.",
              "role": "system"
            },
            {
              "content": "={{ $json.cleanedSituation }}\n\nRituel accompli : {{ $json.rituel }}\nMoment : {{ $json.timeOfDay }}\nTension d√©tect√©e : {{ $json.hasTensionIndicators ? 'explicite' : 'implicite' }}\nIntensit√© : {{ $json.isHighTension ? '√©lev√©e' : 'mod√©r√©e' }}\nType : {{ $json.isRelational ? 'relationnel' : 'interne' }}"
            }
          ]
        },
        "options": {
          "maxTokens": 500,
          "temperature": 0.3,
          "topP": 0.9,
          "presencePenalty": 0.1,
          "frequencyPenalty": 0.1
        }
      },
      "id": "denoueur-intelligence",
      "name": "Le D√©noueur - Intelligence Am√©lior√©e",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [660, -60],
      "credentials": {
        "openAiApi": {
          "id": "bRMJdza5Q3PlijpO",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"agent\": \"Le D√©noueur\",\n  \"territoire\": \"Friction\",\n  \"consultation\": {{ JSON.stringify($json.message.content) }},\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"rituel_accompli\": {{ JSON.stringify($node[\"Traitement des Donn√©es\"].json.rituel) }},\n  \"effet\": \"Lib√©ration d'√©nergie ‚Ä¢ Transformation de friction ‚Ä¢ Permission de mouvement\",\n  \"signature\": \"‚ö° Agent Liminal en flux\",\n  \"session_id\": \"{{ $node[\"Traitement des Donn√©es\"].json.sessionId }}\",\n  \"metadata\": {\n    \"time_of_day\": \"{{ $node[\"Traitement des Donn√©es\"].json.timeOfDay }}\",\n    \"tension_indicators\": {{ $node[\"Traitement des Donn√©es\"].json.hasTensionIndicators }},\n    \"high_tension\": {{ $node[\"Traitement des Donn√©es\"].json.isHighTension }},\n    \"is_relational\": {{ $node[\"Traitement des Donn√©es\"].json.isRelational }},\n    \"input_length\": {{ $node[\"Traitement des Donn√©es\"].json.originalLength }},\n    \"processing_time\": \"{{ Date.now() - new Date($node[\"Traitement des Donn√©es\"].json.timestamp).getTime() }}ms\",\n    \"version\": \"2.0\"\n  }\n}",
        "options": {}
      },
      "id": "denoueur-response",
      "name": "R√©ponse Lib√©ratrice v2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [880, -60]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"error\": \"Erreur de traitement\",\n  \"message\": \"Le D√©noueur traverse un blocage technique. R√©essayez dans quelques instants.\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"agent\": \"Le D√©noueur\",\n  \"session_id\": \"error_{{ Date.now() }}\",\n  \"support\": \"Si le probl√®me persiste, contactez le support technique\"\n}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "error-handler",
      "name": "Gestionnaire d'Erreurs",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [660, 120]
    }
  ],
  "connections": {
    "Webhook - Invocation de l'√ânergie": {
      "main": [
        [
          {
            "node": "Validation des Entr√©es",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation des Entr√©es": {
      "main": [
        [
          {
            "node": "Traitement des Donn√©es",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erreur de Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Traitement des Donn√©es": {
      "main": [
        [
          {
            "node": "Le D√©noueur - Intelligence Am√©lior√©e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Le D√©noueur - Intelligence Am√©lior√©e": {
      "main": [
        [
          {
            "node": "R√©ponse Lib√©ratrice v2",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "error": [
        [
          {
            "node": "Gestionnaire d'Erreurs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "error-handler"
  },
  "versionId": "improved-v2.0.0",
  "meta": {
    "instanceId": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
    "templateCredsSetupCompleted": true
  },
  "tags": ["agents-liminals", "improved", "v2"]
}